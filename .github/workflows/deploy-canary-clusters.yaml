name: Deploy charon canary clusters

on: 
    workflow_dispatch:
    repository_dispatch:
        types: [charon-package-published]
    push:
        branches:
            - main
        paths:
            - templates/**
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_CREDS }}'

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v0'
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_REGION }}
        project_id: ${{ secrets.PROJECT_ID }}
    
    - name: Get charon image tag
      id: charon_image_tag
      run: |
         echo ::set-output name=tag::$(git rev-parse --short ${{ github.event.client_payload.sha }})

    - name: Deploy charon-prater-0
      run: |-
        cat <<EOT >> .env
        CLUSTER_NAME=charon-prater-0
        CLUSTER_SIZE=4
        CHARON_VERSION=${{ steps.charon_image_tag.outputs.tag || 'latest' }}
        TEKU_VERSION=${{ secrets.TEKU_VERSION || 'latest' }}
        BEACON_NODE_ENDPOINTS=${{ secrets.GOERLI_BEACON_NODE_ENDPOINTS }}
        EOT
        ./deploy.sh

    - name: Deploy charon-prater-1
      run: |-
        cat <<EOT >> .env
        CLUSTER_NAME=charon-prater-1
        CLUSTER_SIZE=4
        CHARON_VERSION=${{ steps.charon_image_tag.outputs.tag || 'latest' }}
        TEKU_VERSION=${{ secrets.TEKU_VERSION || 'latest' }}
        BEACON_NODE_ENDPOINTS=${{ secrets.GOERLI_BEACON_NODE_ENDPOINTS }}
        EOT
        ./deploy.sh

    - name: Deploy charon-ropsten-1
      run: |-
        cat <<EOT >> .env
        CLUSTER_NAME=charon-ropsten-1
        CLUSTER_SIZE=7
        CHARON_VERSION=${{ steps.charon_image_tag.outputs.tag || 'latest' }}
        TEKU_VERSION=${{ secrets.TEKU_VERSION || 'latest' }}
        BEACON_NODE_ENDPOINTS=${{ secrets.ROPSTEN_BEACON_NODE_ENDPOINTS }}
        EOT
        ./deploy.sh
    
    - name: Deploy charon-gnosis-0
      run: |-
        cat <<EOT >> .env
        CLUSTER_NAME=charon-gnosis-0
        CLUSTER_SIZE=7
        CHARON_VERSION=${{ steps.charon_image_tag.outputs.tag || 'latest' }}
        TEKU_VERSION=${{ secrets.TEKU_VERSION || 'latest' }}
        BEACON_NODE_ENDPOINTS=${{ secrets.GNOSIS_BEACON_NODE_ENDPOINTS }}
        EOT
        ./deploy.sh
