---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bootnode-config
  namespace: $CLUSTER_NAME
data:
  CHARON_JAEGER_ADDRESS: "jaeger:6831"
  CHARON_P2P_TCP_ADDRESS: "0.0.0.0:3600"
  CHARON_P2P_UDP_ADDRESS: "0.0.0.0:3630"
  CHARON_SIMNET_BEACON_MOCK: "false"
  CHARON_SIMNET_VALIDATOR_MOCK: "false"
  CHARON_LOG_LEVEL: "debug"
  CHARON_BEACON_NODE_ENDPOINT: $BEACON_NODE_ENDPOINT
  CHARON_BOOTNODE_HTTP_ADDRESS: "0.0.0.0:3640"
  CHARON_MANIFEST_FILE: "/charon/cluster-lock.json"
  CHARON_DATA_DIR: /charon/bootnode
  CHARON_P2P_BOOTNODES: ""
  CHARON_P2P_EXTERNAL_HOSTNAME: bootnode
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bootnode
  name: bootnode
  namespace: $CLUSTER_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bootnode
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: bootnode
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: bootnode
          image: ghcr.io/obolnetwork/charon:$CHARON_VERSION
          command: ["/usr/local/bin/charon"]
          args: ["bootnode"]
          readinessProbe:
            httpGet:
              path: /enr
              port: 3640
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /enr
              port: 3640
            initialDelaySeconds: 10
            periodSeconds: 5
          envFrom:
            - configMapRef:
                name: bootnode-config
          volumeMounts:
            - name: cluster-lock
              mountPath: /charon
            - name: data
              mountPath: /charon/bootnode
      volumes:
        - name: data
          emptyDir: {}
        - name: cluster-lock
          projected:
            sources:
            - secret:
                name: cluster-lock
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: bootnode
  namespace: $CLUSTER_NAME
spec:
  selector:
    app: bootnode
  ports:
    - name: http
      protocol: TCP
      port: 3640
      targetPort: 3640
    - name: p2p-tcp
      protocol: TCP
      port: 3600
      targetPort: 3600
    - name: p2p-udp
      protocol: UDP
      port: 3630
      targetPort: 3630
